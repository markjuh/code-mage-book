name: Build, Create Release, and Go Releaser

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1

    - name: Install Asciidoctor and Extensions
      run: |
        gem install asciidoctor
        gem install asciidoctor-pdf
        gem install asciidoctor-epub3
        gem install pygments.rb

    - name: Read Version File
      id: read_version
      run: echo "VERSION=$(<VERSION)" >> $GITHUB_ENV

    - name: Build PDF
      run: ./build pdf

    - name: Build EPUB
      run: ./build epub

    - name: Build HTML
      run: ./build html

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        release_name: "Release v${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload PDF to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/code-mage-book-v${{ env.VERSION }}.pdf
        asset_name: code-mage-book-v${{ env.VERSION }}.pdf
        asset_content_type: application/pdf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload EPUB to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/code-mage-book-v${{ env.VERSION }}.epub
        asset_name: code-mage-book-v${{ env.VERSION }}.epub
        asset_content_type: application/epub+zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Create Git Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(<VERSION)
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag v"$VERSION"
        git push origin v"$VERSION"

    - name: Install Goreleaser
      run: go install github.com/goreleaser/goreleaser@latest

    - name: Run Goreleaser
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ env.VERSION }}
      run: |
        goreleaser release --clean --config .goreleaser.yml

    - name: Upload assets
      uses: actions/upload-artifact@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: code-mage
        path: dist/*



