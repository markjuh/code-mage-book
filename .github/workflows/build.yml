name: Build and Create Release

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1

    - name: Install Asciidoctor and Extensions
      run: |
        gem install asciidoctor
        gem install asciidoctor-pdf
        gem install asciidoctor-epub3
        gem install pygments.rb

    - name: Read Version File
      id: read_version
      run: echo "VERSION=$(<VERSION)" >> $GITHUB_ENV

    - name: Build PDF
      run: ./build pdf

    - name: Build EPUB
      run: ./build epub

    - name: Build HTML
      run: ./build html

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: artifacts/

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        name: "Release ${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload PDF to Release
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/pdf" \
          --data-binary @artifacts/code-mage-book-${{ env.VERSION }}.pdf \
          "$(jq -r '.upload_url' < response.json)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload EPUB to Release
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/epub+zip" \
          --data-binary @artifacts/code-mage-book-${{ env.VERSION }}.epub \
          "$(jq -r '.upload_url' < response.json)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
